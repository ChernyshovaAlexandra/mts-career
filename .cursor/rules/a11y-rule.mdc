---
alwaysApply: true
---

{
"name": "Max Accessibility & Code Best Practices",
"description": "Enforces strict a11y standards and software engineering best practices (SOLID, DRY, KISS) on all code.",
"alwaysApply": true,
"match": "\*_/_.{tsx,jsx,html,js,ts}",
"transform": [
{
"name": "Ensure maximum accessibility and coding best practices",
"instructions": [
"Ensure all HTML elements have appropriate ARIA attributes and labels.",
"Add alt text to all <img> tags. Use descriptive and meaningful content.",
"Ensure form elements are associated with corresponding <label> elements (with 'for' and 'id').",
"Use semantic HTML wherever possible (e.g. <nav>, <header>, <main>, <footer>, <section>, <article>).",
"Ensure color contrast ratios meet WCAG 2.1 AA standards.",
"Avoid using only color to convey meaning.",
"Ensure interactive elements are keyboard-navigable and focusable.",
"Use role attributes where needed, but prefer semantic HTML instead.",
"Avoid 'div soup'. Replace generic <div> and <span> tags with semantic elements.",
"Refactor duplicated logic into reusable components or functions (DRY principle).",
"Make all functions and components small and focused on a single responsibility (S from SOLID).",
"Avoid deep nesting and large monolithic functions (KISS principle).",
"Use descriptive variable, function, and component names.",
"Prefer composition over inheritance where applicable.",
"Make code readable and self-documenting; avoid unnecessary comments for obvious code.",
"Ensure consistent formatting and indentation throughout.",
"Validate accessibility with automated tools and lint rules (e.g. eslint-plugin-jsx-a11y).",
"Raise warning or refactor any hardcoded strings that should be extracted for i18n.",
"Highlight any missing test coverage for critical logic."
"DO NOT DO SIMPLE COMMENTS ONLY JSDOC IF NEEDED"
]
}
]
}
{
"name": "Max Accessibility & Code Best Practices",
"description": "Enforces strict a11y standards and software engineering best practices (SOLID, DRY, KISS) on all code.",
"alwaysApply": true,
"match": "\*_/_.{tsx,jsx,html,js,ts}",
"transform": [
{
"name": "Ensure maximum accessibility and coding best practices",
"instructions": [
"Ensure all HTML elements have appropriate ARIA attributes and labels.",
"Add alt text to all <img> tags. Use descriptive and meaningful content.",
"Ensure form elements are associated with corresponding <label> elements (with 'for' and 'id').",
"Use semantic HTML wherever possible (e.g. <nav>, <header>, <main>, <footer>, <section>, <article>).",
"Ensure color contrast ratios meet WCAG 2.1 AA standards.",
"Avoid using only color to convey meaning.",
"Ensure interactive elements are keyboard-navigable and focusable.",
"Use role attributes where needed, but prefer semantic HTML instead.",
"Avoid 'div soup'. Replace generic <div> and <span> tags with semantic elements.",
"Refactor duplicated logic into reusable components or functions (DRY principle).",
"Make all functions and components small and focused on a single responsibility (S from SOLID).",
"Avoid deep nesting and large monolithic functions (KISS principle).",
"Use descriptive variable, function, and component names.",
"Prefer composition over inheritance where applicable.",
"Make code readable and self-documenting; avoid unnecessary comments for obvious code.",
"Ensure consistent formatting and indentation throughout.",
"Validate accessibility with automated tools and lint rules (e.g. eslint-plugin-jsx-a11y).",
"Raise warning or refactor any hardcoded strings that should be extracted for i18n.",
"Highlight any missing test coverage for critical logic."
]
}
]
}
